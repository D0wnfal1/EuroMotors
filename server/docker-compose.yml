services:
  euromotors.api:
    image: ${DOCKER_REGISTRY-}euromotorsapi
    container_name: Euromotors.Api
    build:
      context: .
      dockerfile: src/EuroMotors.Api/Dockerfile
    ports:
      - 5000:8080
      - 5001:8081
    networks:
      - server-network

 # euromotors.client:
 #   build:
 #     context: ../client
 #     dockerfile: Dockerfile
 #   container_name: euromotors.Client
 #   ports:
 #     - "4200:4200"
 #   volumes:
 #     - ../client:/app 
 #   depends_on:
 #     - euromotors.api

 # euromotors.nginx:
 #   build:
 #     context: ./nginx
 #   container_name: euromotors.Nginx
 #   ports:
 #     - "80:80"
 #   depends_on:
 #     - euromotors.client
 #     - euromotors.api
 #   networks:
 #     - server-network

  euromotors.db:
    image: postgres:17
    container_name: Euromotors.Db
    environment:
      - POSTGRES_DB=euromotors
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - server-network

  euromotors.seq:
    image: datalust/seq:latest
    container_name: Euromotors.Seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 8081:80
    networks:
      - server-network

  euromotors.redis:
    image: redis:latest
    container_name: Euromotors.Redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - server-network

networks:
  server-network:
    driver: bridge