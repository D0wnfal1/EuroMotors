services:
  euromotors.api:
    image: d0wnfall/euromotorsapi:dev
    pull_policy: never
    container_name: Euromotors.Api
    build:
      context: .
      dockerfile: src/EuroMotors.Api/Dockerfile
    ports:
      - 5000:8080
      - 5001:8081
    networks:
      - server-network

  euromotors.db:
    image: postgres:17
    container_name: Euromotors.Db
    environment:
      - POSTGRES_DB=euromotors
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - server-network

  euromotors.seq:
    image: datalust/seq:latest
    container_name: Euromotors.Seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 5341:5341
      - 8081:80
    networks:
      - server-network

  euromotors.redis:
    image: redis:latest
    container_name: Euromotors.Redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - server-network

  # euromotors.sonarqube:
  #   image: sonarqube:latest
  #   container_name: Euromotors.SonarQube
  #   environment:
  #     - SONARQUBE_JDBC_URL=jdbc:postgresql://euromotors.db:5432/sonar
  #     - SONARQUBE_JDBC_USERNAME=postgres
  #     - SONARQUBE_JDBC_PASSWORD=postgres
  #   ports:
  #     - 9000:9000
  #   volumes:
  #     - sonarqube-data:/opt/sonarqube/data
  #     - sonarqube-extensions:/opt/sonarqube/extensions
  #   networks:
  #     - server-network
  #   depends_on:
  #     - euromotors.db


networks:
  server-network:
    driver: bridge

# volumes:
#   sonarqube-data:
#   sonarqube-extensions: