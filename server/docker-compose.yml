services:
  euromotors.api:
    image: d0wnfal1/euromotorsapi:latest
    pull_policy: always
    container_name: Euromotors.Api
    build:
      context: .
      dockerfile: src/EuroMotors.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ConnectionStrings__DefaultConnection=Host=host.docker.internal;Port=5432;Database=euromotors;Username=postgres;Password=postgres
      - ConnectionStrings__Cache=euromotors.redis:6379
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./src/EuroMotors.Api/ssl:/app/ssl:ro
    depends_on:
      - euromotors.db
      - euromotors.redis
    networks:
      - server-network

  euromotors.db:
    image: postgres:17
    container_name: Euromotors.Db
    restart: always
    environment:
      - POSTGRES_DB=euromotors
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - server-network

  euromotors.seq:
    image: datalust/seq:latest
    container_name: Euromotors.Seq
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORD=seqadmin
    ports:
      - 5341:5341
      - 8081:80
    networks:
      - server-network

  euromotors.redis:
    image: redis:latest
    container_name: Euromotors.Redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - server-network

  euromotors.prometheus:
    image: prom/prometheus:latest
    container_name: Euromotors.Prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./.containers/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - server-network

  euromotors.grafana:
    image: grafana/grafana:latest
    container_name: Euromotors.Grafana
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./.containers/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - euromotors.prometheus
    networks:
      - server-network

networks:
  server-network:
    driver: bridge

volumes:
  prometheus_data: {}
